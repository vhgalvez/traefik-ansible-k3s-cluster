# playbooks\uninstall-traefik-dashboard.yml
# =========================================================
# 🧹 Desinstalación completa y segura de Traefik + recursos
# =========================================================
---
- name: 🧹 Desinstalar Traefik y limpiar recursos relacionados
  hosts: localhost
  gather_facts: false

  vars_files:
    - ../vars/main.yml

  vars:
    kubeconfig_path: "/home/victory/.kube/config"
    helm_bin_path: "/usr/local/bin/helm"
    kubectl_bin_path: "/usr/local/bin/kubectl"
    files_dir: "{{ playbook_dir }}/files"
    traefik_namespace: "kube-system"  # Define the namespace
    traefik_release_name: "traefik"  # Define the Helm release name
    traefik_pvc_name: "certificados-longhorn"  # PVC name for certificates
    traefik_dashboard_secret_name: "traefik-dashboard-secret"
    internal_tls_secret_name: "wildcard-socialdevs-tls"

  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

  tasks:
    # 1 ────────────────────────────────────────────────────────
    - name: 🗑️ Borrar directorio temporal playbooks/files
      ansible.builtin.file:
        path: "{{ files_dir }}"
        state: absent
        force: true

    # 2 ────────────────────────────────────────────────────────
    - name: 🔍 ¿Existe release Traefik?
      shell: "{{ helm_bin_path }} status {{ traefik_release_name }} -n {{ traefik_namespace }} --quiet || true"
      register: helm_status
      changed_when: false

    - name: ❌ Desinstalar Helm release (si existe)
      when: helm_status.stdout != ""
      shell: "{{ helm_bin_path }} uninstall {{ traefik_release_name }} -n {{ traefik_namespace }} --wait --timeout 120s"

    # 3 ────────────────────────────────────────────────────────
    - name: ❌ Eliminar Job copy-wildcard-cert (si existe)
      shell: "{{ kubectl_bin_path }} delete job copy-wildcard-cert -n {{ traefik_namespace }} --ignore-not-found --wait=false"

    # 4 ────────────────────────────────────────────────────────
    - name: 🔍 Obtener JSON del PVC
      shell: "{{ kubectl_bin_path }} get pvc {{ traefik_pvc_name }} -n {{ traefik_namespace }} -o json || true"
      register: pvc_json
      changed_when: false

    - name: 🧪 Tiene finalizer pvc-protection?
      set_fact:
        pvc_needs_patch: "{{ 'kubernetes.io/pvc-protection' in pvc_json.stdout }}"

    - name: 🧰 Quitar finalizers si el PVC está bloqueado
      when: pvc_needs_patch
      shell: |
        {{ kubectl_bin_path }} patch pvc {{ traefik_pvc_name }} \
          -n {{ traefik_namespace }} \
          --type merge \
          -p '{"metadata":{"finalizers":[]}}'

    - name: ❌ Eliminar PVC certificados-longhorn
      shell: "{{ kubectl_bin_path }} delete pvc {{ traefik_pvc_name }} -n {{ traefik_namespace }} --ignore-not-found --wait=false"

    # Detectar y borrar PV huérfano
    - name: 🔍 Buscar PV asociado al PVC
      shell: >
        {{ kubectl_bin_path }} get pv -o jsonpath='{.items[?(@.spec.claimRef.name=="{{ traefik_pvc_name }}")].metadata.name}'
      register: pv_name
      changed_when: false

    - name: ❌ Eliminar PV asociado
      when: pv_name.stdout != ""
      shell: "{{ kubectl_bin_path }} delete pv {{ pv_name.stdout }} --ignore-not-found --wait=false"

    # 5 ────────────────────────────────────────────────────────
    - name: ❌ Eliminar Secret y SealedSecret (auth + TLS)
      shell: |
        {{ kubectl_bin_path }} delete secret {{ traefik_dashboard_secret_name }} -n {{ traefik_namespace }} --ignore-not-found
        {{ kubectl_bin_path }} delete sealedsecret {{ traefik_dashboard_secret_name }} -n {{ traefik_namespace }} --ignore-not-found
        {{ kubectl_bin_path }} delete secret {{ internal_tls_secret_name }} -n {{ traefik_namespace }} --ignore-not-found
        {{ kubectl_bin_path }} delete sealedsecret {{ internal_tls_secret_name }} -n {{ traefik_namespace }} --ignore-not-found

    # 6 ────────────────────────────────────────────────────────
    - name: ❌ Eliminar CRDs Traefik v3
      loop:
        - ingressroutes
        - ingressroutetcps
        - ingressrouteudps
        - middlewares
        - tlsoptions
        - tlsstores
        - serverstransports
        - traefikservices
      loop_control:
        loop_var: crd
      shell: "{{ kubectl_bin_path }} delete crd {{ crd }}.traefik.io --ignore-not-found"

    # 7 ────────────────────────────────────────────────────────
    - name: ❌ Eliminar Service traefik
      shell: "{{ kubectl_bin_path }} delete svc traefik -n {{ traefik_namespace }} --ignore-not-found --wait=false"

    # 8 ────────────────────────────────────────────────────────
    - name: ✅ Confirmación final
      debug:
        msg: "✅ Traefik, Job, PVC, PV, CRDs, Service y secretos eliminados satisfactoriamente."