# ========================================================
# 🧹 FASE FINAL: Desinstalación segura de Traefik
# Elimina Helm release, secretos, CRDs, servicios y limpia puertos ocupados
# ========================================================

- name: 🧹 Desinstalar Traefik y limpiar recursos relacionados
  hosts: localhost
  gather_facts: false
  become: true

  vars_files:
    - ../vars/main.yml

  vars:
    kubeconfig_path: "/home/victory/.kube/config"
    helm_bin_path: "/usr/local/bin/helm"
    kubectl_bin_path: "/usr/local/bin/kubectl"
    env_path: "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    traefik_namespace: "kube-system"
    traefik_release_name: "traefik"
    internal_tls_secret_name: "internal-tls-secret"
    traefik_dashboard_secret_name: "traefik-dashboard-secret"
    playbooks_files_path: "playbooks/files/"
    ports_to_release: [32591, 31541, 31900, 32124, 31050]  # Fijos + los dinámicos recientes

  tasks:

    - name: 🗑️ Eliminar archivos generados
      file:
        path: "{{ playbooks_files_path }}"
        state: absent

    - name: 🔍 Verificar si Helm release existe
      shell: "{{ helm_bin_path }} status {{ traefik_release_name }} -n {{ traefik_namespace }}"
      environment: { PATH: "{{ env_path }}" }
      register: helm_status
      failed_when: false
      changed_when: false

    - name: ❌ Desinstalar Helm release Traefik
      shell: "{{ helm_bin_path }} uninstall {{ traefik_release_name }} -n {{ traefik_namespace }}"
      environment: { PATH: "{{ env_path }}" }
      when: helm_status.rc == 0

    - name: ❌ Eliminar secretos relacionados
      shell: >
        {{ kubectl_bin_path }} delete secret {{ traefik_dashboard_secret_name }} -n {{ traefik_namespace }} --ignore-not-found &&
        {{ kubectl_bin_path }} delete sealedsecret {{ traefik_dashboard_secret_name }} -n {{ traefik_namespace }} --ignore-not-found &&
        {{ kubectl_bin_path }} delete secret {{ internal_tls_secret_name }} -n {{ traefik_namespace }} --ignore-not-found
      environment: { KUBECONFIG: "{{ kubeconfig_path }}" }

    - name: ❌ Eliminar CRDs de Traefik si existen
      shell: |
        set -e
        {{ kubectl_bin_path }} delete crd ingressroutes.traefik.io --ignore-not-found
        {{ kubectl_bin_path }} delete crd ingressroutetcps.traefik.io --ignore-not-found
        {{ kubectl_bin_path }} delete crd ingressrouteudps.traefik.io --ignore-not-found
        {{ kubectl_bin_path }} delete crd middlewares.traefik.io --ignore-not-found
        {{ kubectl_bin_path }} delete crd tlsoptions.traefik.io --ignore-not-found
        {{ kubectl_bin_path }} delete crd tlsstores.traefik.io --ignore-not-found
        {{ kubectl_bin_path }} delete crd serverstransports.traefik.io --ignore-not-found
        {{ kubectl_bin_path }} delete crd serverstransporttcps.traefik.io --ignore-not-found
        {{ kubectl_bin_path }} delete crd traefikservices.traefik.io --ignore-not-found
      environment: { KUBECONFIG: "{{ kubeconfig_path }}" }

    - name: ❌ Eliminar el Service traefik si existe
      shell: "{{ kubectl_bin_path }} delete svc traefik -n {{ traefik_namespace }} --ignore-not-found"
      environment: { KUBECONFIG: "{{ kubeconfig_path }}" }

    - name: 🔎 Verificar servicios que usan los puertos
      shell: "ss -tulnp | grep -E '{{ ports_to_release | join(\"|\") }}' || true"
      register: used_ports_output
      changed_when: false

    - name: 🔒 Eliminar reglas nftables que aceptan esos puertos
      shell: |
        for port in {{ ports_to_release | join(" ") }}; do
          if ss -tuln | grep ":$port"; then
            echo "🛑 Cerrando puerto $port"
            nft delete rule inet filter input tcp dport $port accept || true
          fi
        done
      when: used_ports_output.stdout != ""
      register: firewall_cleanup
      failed_when: false

    - name: ✅ Confirmación final
      debug:
        msg: "✅ Traefik desinstalado y puertos liberados con éxito."