# playbooks/uninstall-traefik.yml
# ========================================================
# üßπ FASE FINAL: Desinstalaci√≥n segura de Traefik
# - Elimina todos los recursos relacionados (Helm release, Secret, PVC, etc.)
# - Puede ejecutarse despu√©s de cualquier fase (1, 2 o 3)
# ========================================================

- name: üßπ Desinstalar Traefik y limpiar recursos relacionados
  hosts: localhost
  gather_facts: false
  become: false

  vars_files:
    - ../vars/main.yml

  vars:
    kubeconfig_path: "/home/victory/.kube/config"
    helm_bin_path: "/usr/local/bin/helm"
    kubectl_bin_path: "/usr/local/bin/kubectl"
    env_path: "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    traefik_namespace: "kube-system"  # Cambia esto si usas otro namespace
    traefik_release_name: "traefik"   # Cambia esto si tienes otro nombre para tu release

  tasks:

    - name: ‚ùå Desinstalar Helm release de Traefik
      shell: >
        {{ helm_bin_path }} uninstall {{ traefik_release_name }} -n {{ traefik_namespace }}
      environment:
        PATH: "{{ env_path }}"
      ignore_errors: true

    - name: ‚ùå Eliminar SealedSecret del Dashboard (si existe)
      shell: >
        {{ kubectl_bin_path }} delete sealedsecret traefik-dashboard-secret -n {{ traefik_namespace }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      ignore_errors: true

    - name: ‚ùå Eliminar Secret plano del Dashboard (fallback)
      shell: >
        {{ kubectl_bin_path }} delete secret traefik-dashboard-secret -n {{ traefik_namespace }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      ignore_errors: true

    - name: ‚ùå Eliminar ConfigMap 'traefik-config' (si existe)
      shell: >
        {{ kubectl_bin_path }} delete configmap traefik-config -n {{ traefik_namespace }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      ignore_errors: true

    - name: ‚ùå Eliminar IngressRoute del Dashboard (si existe)
      shell: >
        {{ kubectl_bin_path }} delete ingressroute traefik-dashboard -n {{ traefik_namespace }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      ignore_errors: true

    - name: ‚ùå Eliminar PVCs creados por Traefik (si existen)
      shell: >
        {{ kubectl_bin_path }} delete pvc -n {{ traefik_namespace }} --selector=app.kubernetes.io/name=traefik
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      ignore_errors: true

    - name: ‚ùå Eliminar PVs hu√©rfanos (si existen)
      shell: >
        {{ kubectl_bin_path }} delete pv --selector=app.kubernetes.io/name=traefik
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      ignore_errors: true

    - name: ‚ùå Eliminar almacenamiento local persistente (si est√° habilitado)
      shell: >
        rm -rf {{ traefik_storage_path }}
      when: traefik_storage_enabled | default(false) | bool
      ignore_errors: true

    - name: ‚úÖ Verificar que no quedan recursos de Traefik
      shell: >
        {{ kubectl_bin_path }} get all -n {{ traefik_namespace }} || echo "‚úîÔ∏è Todos los recursos de Traefik han sido eliminados."
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"