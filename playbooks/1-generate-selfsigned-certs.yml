# playbooks/01_generate-ca-and-wildcard.yml
# =========================================
#  Genera una autoridad certificadora (CA)
#  raíz autofirmada (RootCA) si no existe,
#  y un certificado wildcard firmado para
#  *.socialdevs.site con su clave privada.
#
#  ✔ CA: ca-root.crt y ca-root.key
#  ✔ Wildcard: wildcard-socialdevs-tls.crt y .key
#  ✔ SANs incluidos (*.socialdevs.site, grafana, jenkins, etc.)
#  ✔ Compatible para importar la CA en Firefox/Chrome
#
#  ➜ Salida en: files/certs/
#  ➜ Útil para desarrollo, clusters internos o laboratorios
# =========================================

- name: 🛡️ Generar CA raíz y certificado wildcard firmado
  hosts: localhost
  gather_facts: false

  vars:
    certs_dir: "{{ playbook_dir }}/files/certs"
    ca_key:       ca-root.key
    ca_csr:       ca-root.csr
    ca_crt:       ca-root.crt
    server_key:   wildcard-socialdevs-tls.key
    server_csr:   wildcard-socialdevs-tls.csr
    server_crt:   wildcard-socialdevs-tls.crt

    country:      ES
    state:        Madrid
    locality:     Madrid
    organization: FlatcarMicroCloud
    common_name:  "*.socialdevs.site"

    extra_sans:
      - socialdevs.site
      - grafana.socialdevs.site
      - jenkins.socialdevs.site
      - argocd.socialdevs.site
      - prometheus.socialdevs.site
      - longhorn.socialdevs.site
      - traefik.socialdevs.site

    force_recreate: false

  tasks:
    - name: 📁 Crear directorio de certificados
      ansible.builtin.file:
        path: "{{ certs_dir }}"
        state: directory
        mode: "0755"

    - name: 🔐 Crear clave privada de la CA
      community.crypto.openssl_privatekey:
        path: "{{ certs_dir }}/{{ ca_key }}"
        size: 4096
        type: RSA
        force: "{{ force_recreate | bool }}"

    - name: 📝 Crear CSR de la CA
      community.crypto.openssl_csr:
        path: "{{ certs_dir }}/{{ ca_csr }}"
        privatekey_path: "{{ certs_dir }}/{{ ca_key }}"
        common_name: "RootCA"
        country_name: "{{ country }}"
        state_or_province_name: "{{ state }}"
        locality_name: "{{ locality }}"
        organization_name: "{{ organization }}"
        force: "{{ force_recreate | bool }}"

    - name: 📜 Crear certificado autofirmado de la CA desde CSR
      community.crypto.x509_certificate:
        path: "{{ certs_dir }}/{{ ca_crt }}"
        csr_path: "{{ certs_dir }}/{{ ca_csr }}"
        privatekey_path: "{{ certs_dir }}/{{ ca_key }}"
        provider: selfsigned
        selfsigned_not_after: "+3650d"
        selfsigned_version: 3
        selfsigned_create_subject_key_identifier: create_if_not_provided
        force: "{{ force_recreate | bool }}"

    - name: 🔑 Crear clave privada para el certificado wildcard
      community.crypto.openssl_privatekey:
        path: "{{ certs_dir }}/{{ server_key }}"
        size: 2048
        type: RSA
        force: "{{ force_recreate | bool }}"

    - name: 📝 Crear CSR para el wildcard (*.socialdevs.site)
      community.crypto.openssl_csr:
        path: "{{ certs_dir }}/{{ server_csr }}"
        privatekey_path: "{{ certs_dir }}/{{ server_key }}"
        common_name: "{{ common_name }}"
        subject_alt_name: >-
          DNS:{{ common_name }},
          {{ extra_sans | map('regex_replace', '^(.*)$', 'DNS:\\1') | join(',') }}
        force: "{{ force_recreate | bool }}"

    - name: ✅ Firmar el CSR con la CA raíz (sin atributos extra)
      community.crypto.x509_certificate:
        path: "{{ certs_dir }}/{{ server_crt }}"
        csr_path: "{{ certs_dir }}/{{ server_csr }}"
        provider: ownca
        ownca_path: "{{ certs_dir }}/{{ ca_crt }}"
        ownca_privatekey_path: "{{ certs_dir }}/{{ ca_key }}"
        ownca_not_after: "+3650d"
        force: "{{ force_recreate | bool }}"

    # —————————————————————————————————————————————————————————————
    # 🔐 Ajuste de permisos con ansible.builtin.file (evita chattr)
    # —————————————————————————————————————————————————————————————

    - name: ⚙️ Ajustar permisos clave privada de la CA
      ansible.builtin.file:
        path: "{{ certs_dir }}/{{ ca_key }}"
        mode: "0600"

    - name: ⚙️ Ajustar permisos certificado de la CA
      ansible.builtin.file:
        path: "{{ certs_dir }}/{{ ca_crt }}"
        mode: "0644"

    - name: ⚙️ Ajustar permisos clave privada del wildcard
      ansible.builtin.file:
        path: "{{ certs_dir }}/{{ server_key }}"
        mode: "0600"

    - name: ⚙️ Ajustar permisos certificado wildcard
      ansible.builtin.file:
        path: "{{ certs_dir }}/{{ server_crt }}"
        mode: "0644"

    - name: 🧹 Borrar CSRs temporales (opcional)
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ certs_dir }}/{{ ca_csr }}"
        - "{{ certs_dir }}/{{ server_csr }}"
      when: not force_recreate | bool

    - name: 📄 Mostrar resumen de archivos generados
      ansible.builtin.shell: ls -l "{{ certs_dir }}"
      register: certs_output

    - name: 📤 Mostrar salida de archivos
      ansible.builtin.debug:
        msg: "{{ certs_output.stdout_lines }}"