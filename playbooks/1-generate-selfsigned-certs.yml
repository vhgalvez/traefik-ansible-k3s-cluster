# playbooks/1-generate-selfsigned-certs.yml
# ============================================================
#    Generar certificados wildcard autofirmados
# - Se crean en ./files/certs/
# - Usados como base para crear Secret TLS
# ============================================================

- name: üõ°Ô∏è Generar certificados wildcard autofirmados para wildcard-socialdevs-tls
  hosts: localhost
  become: true

  vars_files:
    - ../vars/main.yml

  vars:
    certs_dir: "./files/certs"
    cert_name: "wildcard-socialdevs-tls"
    country: "ES"
    state: "Madrid"
    locality: "Madrid"
    organization: "FlatcarMicroCloud"
    common_name: "*.socialdevs.site"
    san_file: "/tmp/san.cnf"
    force_recreate: false  # Cambia a true para forzar la creaci√≥n de nuevos certificados

  tasks:
    - name: üìÅ Crear directorio de certificados local
      file:
        path: "{{ certs_dir }}"
        state: directory
        mode: "0755"

    # Verificar existencia de certificado
    - name: üìã Verificar existencia de certificado
      stat:
        path: "{{ certs_dir }}/{{ cert_name }}.crt"
      register: cert_stat

    # Verificar existencia de clave privada
    - name: üìã Verificar existencia de clave privada
      stat:
        path: "{{ certs_dir }}/{{ cert_name }}.key"
      register: key_stat

    - name: ‚ùå Abortar si los certificados ya existen y force_recreate es false
      fail:
        msg: "‚ùå Los certificados ya existen y no se est√° forzando la recreaci√≥n."
      when: not force_recreate and cert_stat.stat.exists and key_stat.stat.exists

    # Crear archivo SAN temporal
    - name: üìù Crear archivo SAN temporal
      copy:
        dest: "{{ san_file }}"
        content: |
          [req]
          default_bits       = 4096
          prompt             = no
          default_md         = sha256
          req_extensions     = req_ext
          distinguished_name = dn

          [dn]
          C={{ country }}
          ST={{ state }}
          L={{ locality }}
          O={{ organization }}
          CN={{ common_name }}

          [req_ext]
          subjectAltName = @alt_names

          [alt_names]
          DNS.1 = *.socialdevs.site
          DNS.2 = socialdevs.site
          DNS.3 = jenkins.socialdevs.site
          DNS.4 = grafana.socialdevs.site
          DNS.5 = argocd.socialdevs.site
          DNS.6 = prometheus.socialdevs.site

    # Generar clave privada
    - name: üîê Generar clave privada
      command: openssl genrsa -out {{ certs_dir }}/{{ cert_name }}.key 4096
      when: force_recreate or not key_stat.stat.exists

    # Generar certificado wildcard autofirmado
    - name: üìú Generar certificado wildcard autofirmado
      command: >
        openssl req -x509 -nodes -days 3650
        -key {{ certs_dir }}/{{ cert_name }}.key
        -out {{ certs_dir }}/{{ cert_name }}.crt
        -config {{ san_file }}
        -extensions req_ext
      when: force_recreate or not cert_stat.stat.exists

    # Establecer permisos locales para los archivos generados
    - name: üîê Establecer permisos locales
      file:
        path: "{{ item.path }}"
        mode: "{{ item.mode }}"
      loop:
        - { path: "{{ certs_dir }}/{{ cert_name }}.crt", mode: "0644" }
        - { path: "{{ certs_dir }}/{{ cert_name }}.key", mode: "0600" }

    # Eliminar archivo temporal SAN
    - name: üßπ Eliminar archivo temporal SAN
      file:
        path: "{{ san_file }}"
        state: absent