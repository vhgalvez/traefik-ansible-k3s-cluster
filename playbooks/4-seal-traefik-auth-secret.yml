# playbooks/4-seal-traefik-auth-secret.yml
# ===============================================================
# üîê Crear y cifrar Secret de autenticaci√≥n b√°sica para Traefik
# - Genera hash htpasswd (Apache)
# - Renderiza Secret plano
# - Lo cifra con kubeseal para uso en GitOps (ArgoCD)
# ===============================================================

- name: üîê Generar y cifrar Secret para Traefik Dashboard
  hosts: localhost
  gather_facts: false

  vars_files:
    - ../vars/main.yml

  vars:
    kubeconfig_path: "/home/victory/.kube/config"
    kubeseal_path: "/usr/local/bin/kubeseal"
    kubectl_path: "/usr/local/bin/kubectl"
    files_dir: "{{ playbook_dir }}/files"
    rendered_secret_path: "{{ files_dir }}/traefik-dashboard-secret.yaml"
    sealed_secret_path: "{{ files_dir }}/traefik-dashboard-sealed.yaml"

  tasks:
    # ‚úÖ Validar herramientas necesarias
    - name: üì¶ Validar si kubeseal est√° instalado
      stat:
        path: "{{ kubeseal_path }}"
      register: kubeseal_check

    - name: ‚ùå Abortamos si kubeseal no est√° instalado
      fail:
        msg: "‚ùå kubeseal no est√° instalado en {{ kubeseal_path }}. Inst√°lalo antes de continuar."
      when: not kubeseal_check.stat.exists

    - name: üì¶ Validar si kubectl est√° instalado
      stat:
        path: "{{ kubectl_path }}"
      register: kubectl_check

    - name: ‚ùå Abortamos si kubectl no est√° instalado
      fail:
        msg: "‚ùå kubectl no est√° instalado en {{ kubectl_path }}. Inst√°lalo antes de continuar."
      when: not kubectl_check.stat.exists

    # ‚úÖ Validar credenciales
    - name: ‚ùå Abortamos si traefik_auth_user o traefik_auth_pass est√°n vac√≠os
      fail:
        msg: "‚ùå Variables traefik_auth_user o traefik_auth_pass no est√°n definidas. Exporta o carga .env."
      when: traefik_auth_user | length == 0 or traefik_auth_pass | length == 0

    # üìÅ Crear directorio si no existe
    - name: üìÅ Crear directorio de archivos renderizados
      file:
        path: "{{ files_dir }}"
        state: directory
        mode: "0755"

    # üîê Generar hash htpasswd
    - name: üîê Generar hash htpasswd
      command: htpasswd -nb {{ traefik_auth_user }} {{ traefik_auth_pass }}
      register: traefik_htpasswd_output
      no_log: true

    - name: üîß Limpiar salto de l√≠nea del hash generado
      set_fact:
        traefik_basic_auth: "{{ traefik_htpasswd_output.stdout | trim }}"

    # üìÑ Renderizar Secret plano en YAML
    - name: üìù Renderizar Secret plano en YAML
      template:
        src: ../templates/secrets/traefik-dashboard-secret.yaml.j2
        dest: "{{ rendered_secret_path }}"
      vars:
        traefik_basic_auth: "{{ traefik_basic_auth }}"
      # Elimina la redefinici√≥n de 'traefik_namespace' aqu√≠

    # üîê Cifrar el Secret con kubeseal
    - name: üîê Cifrar el Secret con kubeseal
      shell: >
        {{ kubeseal_path }}
        --controller-name sealed-secrets-controller
        --controller-namespace {{ traefik_namespace }}  # La variable ya est√° definida y disponible
        --format yaml
        < "{{ rendered_secret_path }}" > "{{ sealed_secret_path }}"
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      changed_when: false