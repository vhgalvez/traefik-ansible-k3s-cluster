# playbooks/4-seal-traefik-auth-secret.yml
# ===============================================================
# 🔐 Generar y sellar el Secret de basic-auth para el dashboard
# ===============================================================

- name: 🔐 Generar y sellar el Secret de basic-auth para el dashboard
  hosts: localhost
  gather_facts: false
  become: false

  vars_files:
    - ../vars/main.yml

  vars:
    files_dir: "{{ playbook_dir }}/files"
    unsealed_template: "../templates/secrets/traefik-dashboard-secret.yaml.j2"
    unsealed_path: "{{ files_dir }}/traefik-dashboard-secret-unsealed.yaml"
    sealed_path:   "{{ files_dir }}/traefik-dashboard-sealed.yaml"
    kubeseal:      "/usr/local/bin/kubeseal"
    kubeconfig:    "/home/victory/.kube/config"

  tasks:
    - name: 📋 Verificar que kubeseal esté instalado
      stat:
        path: "{{ kubeseal }}"
      register: kubeseal_installed

    - name: ❌ Abortamos si kubeseal no está instalado
      fail:
        msg: "kubeseal no está instalado en {{ kubeseal }}."
      when: not kubeseal_installed.stat.exists

    - name: ⚙️ Comprobar user/pass definidos en vars/main.yml o .env
      fail:
        msg: "❌ TRAEFIK_AUTH_USER y TRAEFIK_AUTH_PASS deben estar definidos."
      when:
        - traefik_auth_user is not defined or traefik_auth_user == ""
        - traefik_auth_pass is not defined or traefik_auth_pass == ""

    - name: 🔑 Generar cadena basic-auth con htpasswd
      shell: htpasswd -nbB {{ traefik_auth_user }} {{ traefik_auth_pass }}
      register: htpasswd_out
      changed_when: false
      no_log: true

    - name: ✅ Guardar variable traefik_basic_auth
      set_fact:
        traefik_basic_auth: "{{ htpasswd_out.stdout }}"

    - name: 📝 Renderizar Secret no sellado
      template:
        src: "{{ unsealed_template }}"
        dest: "{{ unsealed_path }}"

    - name: 🔐 Sellar el Secret con kubeseal
      shell: |
        {{ kubeseal }}
        --controller-name sealed-secrets-controller
        --controller-namespace kube-system
        --format yaml
        < "{{ unsealed_path }}"
        > "{{ sealed_path }}"
      args:
        creates: "{{ sealed_path }}"
      environment:
        KUBECONFIG: "{{ kubeconfig }}"

    - name: 🗑️ Eliminar Secret no sellado
      file:
        path: "{{ unsealed_path }}"
        state: absent