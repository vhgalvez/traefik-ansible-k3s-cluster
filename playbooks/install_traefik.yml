# playbooks\install_traefik.yml
# fase 2 - Instalar Traefik con Helm en K3s
---
- name: 🚀 Instalar Traefik con Helm dentro del clúster K3s
  hosts: localhost
  gather_facts: false
  become: false

  vars_files:
    - ../vars/main.yml

  vars:
    kubeconfig_path: "/home/victory/.kube/config"
    helm_bin_path: "/usr/local/bin/helm"
    kubectl_bin_path: "/usr/local/bin/kubectl"
    env_path: "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    files_dir: "{{ playbook_dir }}/files"
    traefik_values_file: "{{ files_dir }}/traefik-values.yaml"
    sealed_secret_path: "{{ files_dir }}/traefik-dashboard-sealed.yaml"
    traefik_values_template: "../templates/traefik/values_nopvc.yaml.j2"
    middleware_template: "../templates/traefik/traefik-dashboard-middleware.yaml.j2"
    ingress_template: "../templates/traefik/traefik-dashboard-ingressroute.yaml.j2"

  tasks:
    - name: 📁 Asegurar directorio local files/
      file:
        path: "{{ files_dir }}"
        state: directory

    - name: 📄 Renderizar values.yaml desde plantilla
      template:
        src: "{{ traefik_values_template }}"
        dest: "{{ traefik_values_file }}"

    - name: ❌ Eliminar Traefik por defecto de K3s (si existe)
      shell: |
        {{ kubectl_bin_path }} get helmcharts traefik -n kube-system &&
        {{ kubectl_bin_path }} delete helmcharts traefik -n kube-system
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
        PATH: "{{ env_path }}"
      ignore_errors: true

    - name: ➕ Añadir repositorio Helm de Traefik
      shell: >
        {{ helm_bin_path }} repo add traefik https://traefik.github.io/charts &&
        {{ helm_bin_path }} repo update
      environment:
        PATH: "{{ env_path }}"

    - name: 📆 Instalar Traefik desde Helm Chart
      shell: >
        {{ helm_bin_path }} upgrade --install {{ traefik_release_name }} traefik/traefik
        --namespace {{ traefik_namespace }}
        --create-namespace
        --version {{ traefik_chart_version }}
        --values {{ traefik_values_file }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
        PATH: "{{ env_path }}"

    - name: ⏳ Esperar a que Traefik esté listo
      shell: >
        {{ kubectl_bin_path }} rollout status deploy/{{ traefik_release_name }} -n {{ traefik_namespace }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: 📥 Aplicar Secret sellado de Traefik (si existe)
      shell: >
        {{ kubectl_bin_path }} apply -f {{ sealed_secret_path }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
        PATH: "{{ env_path }}"
      when: sealed_secret_path is defined and lookup('file', sealed_secret_path, errors='ignore') is not none

    - name: 🗒️ Renderizar plantilla de Middleware traefik-auth
      template:
        src: "{{ middleware_template }}"
        dest: "{{ files_dir }}/traefik-dashboard-middleware.yaml"

    - name: 🔐 Aplicar Middleware de autenticación básica para Dashboard
      kubernetes.core.k8s:
        state: present
        namespace: kube-system
        src: "{{ files_dir }}/traefik-dashboard-middleware.yaml"
        kubeconfig: "{{ kubeconfig_path }}"

    - name: 🗒️ Renderizar plantilla de IngressRoute para Dashboard
      template:
        src: "{{ ingress_template }}"
        dest: "{{ files_dir }}/traefik-dashboard-ingressroute.yaml"

    - name: 🚪 Desplegar IngressRoute para Dashboard
      kubernetes.core.k8s:
        state: present
        namespace: kube-system
        src: "{{ files_dir }}/traefik-dashboard-ingressroute.yaml"
        kubeconfig: "{{ kubeconfig_path }}"