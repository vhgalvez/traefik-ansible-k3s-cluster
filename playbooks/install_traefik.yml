# playbooks\install_traefik.yml
---
- name: 🚀 Instalar Traefik con Helm dentro del clúster K3s
  hosts: localhost
  become: false
  vars:
    kubeconfig_path: "/home/victory/.kube/config"
    helm_bin_path: "/usr/local/bin/helm"
    kubectl_path: "/usr/local/bin/kubectl"
    traefik_namespace: "kube-system"
    traefik_release_name: "traefik"
    traefik_chart_version: "26.1.0"
    traefik_values_file: "/tmp/traefik-values.yaml"

  tasks:

    - name: ✅ Verificar que helm está disponible
      stat:
        path: "{{ helm_bin_path }}"
      register: helm_stat

    - name: ❌ Detener si helm no está instalado
      fail:
        msg: "El binario helm no se encontró en {{ helm_bin_path }}."
      when: not helm_stat.stat.exists

    - name: 📁 Asegurar directorio local files/
      file:
        path: ./files/
        state: directory

    - name: 📄 Renderizar values.yaml desde plantilla
      template:
        src: templates/traefik/values.yaml.j2
        dest: "{{ traefik_values_file }}"

    - name: ❌ Desinstalar Traefik por defecto de K3s (si existe)
      shell: >
        KUBECONFIG={{ kubeconfig_path }} {{ kubectl_path }} delete helmcharts traefik -n kube-system || true

    - name: ➕ Añadir repositorio Helm de Traefik
      shell: >
        {{ helm_bin_path }} repo add traefik https://traefik.github.io/charts &&
        {{ helm_bin_path }} repo update

    - name: 🚀 Instalar Traefik con Helm
      shell: >
        {{ helm_bin_path }} upgrade --install {{ traefik_release_name }} traefik/traefik
        --namespace {{ traefik_namespace }}
        --create-namespace
        --version {{ traefik_chart_version }}
        --values {{ traefik_values_file }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: 🧪 Verificar conexión con el clúster Kubernetes
      command: "{{ kubectl_path }} get nodes"
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      register: kubectl_result
      failed_when: kubectl_result.rc != 0
      changed_when: false

    - name: 📊 Mostrar resultado de kubectl
      debug:
        msg: "{{ kubectl_result.stdout }}"