# playbooks/install_traefik.yml
- name: 🚀 Instalar Traefik con Helm dentro del clúster K3s
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../vars/main.yml

  vars:
    rendered_values_file: "{{ playbook_dir }}/files/traefik-values.yaml"

  tasks:
    - name: 📁 Asegurar directorio local files/
      delegate_to: localhost
      run_once: true
      file:
        path: "{{ playbook_dir }}/files"
        state: directory
        mode: "0755"

    - name: 📄 Renderizar values.yaml desde plantilla
      delegate_to: localhost
      run_once: true
      template:
        src: ../templates/traefik/values.yaml.j2
        dest: "{{ rendered_values_file }}"

    - name: ❌ Desinstalar Traefik por defecto de K3s (si existe)
      ansible.builtin.raw: |
        kubectl delete helmchart traefik -n kube-system || true
        kubectl delete deployment traefik -n kube-system || true

    - name: ➕ Añadir repositorio Helm de Traefik
      delegate_to: localhost
      run_once: true
      shell: |
        {{ helm_bin_path }} repo add traefik https://traefik.github.io/charts || true
        {{ helm_bin_path }} repo update
      args:
        executable: /bin/bash

    - name: 📁 Crear directorio ACME en nodos master (Flatcar compatible)
      raw: mkdir -p /var/lib/traefik && chmod 755 /var/lib/traefik
      delegate_to: "{{ item }}"
      with_items: "{{ groups['masters'] }}"

    - name: 📄 Crear archivo acme.json vacío en nodos master (Flatcar compatible)
      raw: test -f /var/lib/traefik/acme.json || (touch /var/lib/traefik/acme.json && chmod 600 /var/lib/traefik/acme.json)
      delegate_to: "{{ item }}"
      with_items: "{{ groups['masters'] }}"

    - name: 📦 Instalar Traefik con Helm
      delegate_to: localhost
      run_once: true
      shell: |
        {{ helm_bin_path }} upgrade --install {{ traefik_release_name }} traefik/traefik \
          --namespace {{ traefik_namespace }} \
          --create-namespace=false \
          --version {{ traefik_chart_version }} \
          --values {{ rendered_values_file }} \
          --kubeconfig {{ kubeconfig_path }}
      args:
        executable: /bin/bash