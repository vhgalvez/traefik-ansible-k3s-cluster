# playbooks\3-create-cert-pvc.yml
# ============================================================
# ðŸ“¦ Crear PVC con Longhorn y copiar certificados TLS como archivos
# Usado por Traefik si se montan desde un volumen (PVC)
# ============================================================
---
- name: ðŸ“¦ Crear PVC Longhorn para certificados
  hosts: localhost
  gather_facts: false

  vars_files:
    - ../vars/main.yml

  vars:
    pvc_name: "{{ traefik_pvc_name }}"
    pvc_namespace: "kube-system"
    tls_secret_name: "{{ internal_tls_secret_name }}"
    pvc_size: "{{ traefik_pvc_size }}"
    storage_class: "{{ traefik_pvc_sc }}"
    kubeconfig_path: "/home/victory/.kube/config"

  tasks:
    - name: ðŸ§º Verificar si PVC ya existe
      kubernetes.core.k8s_info:
        kind: PersistentVolumeClaim
        namespace: "{{ pvc_namespace }}"
        name: "{{ pvc_name }}"
        kubeconfig: "{{ kubeconfig_path }}"
      register: pvc_check
      failed_when: false
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: ðŸ“¦ Crear PVC si no existe
      when: not pvc_check.resources is defined or pvc_check.resources | length == 0
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: "{{ pvc_name }}"
            namespace: "{{ pvc_namespace }}"
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: "{{ pvc_size }}"
            storageClassName: "{{ storage_class }}"
        kubeconfig: "{{ kubeconfig_path }}"
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: ðŸ“¨ Crear Job para copiar certificados al PVC
      kubernetes.core.k8s:
        state: present
        definition: |
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: copy-wildcard-cert
            namespace: {{ pvc_namespace }}
          spec:
            ttlSecondsAfterFinished: 30
            template:
              spec:
                restartPolicy: Never
                containers:
                  - name: copier
                    image: alpine:3.19
                    command: ["/bin/sh", "-c"]
                    args:
                      - |
                        cp /src/tls.crt /dst/wildcard-socialdevs-tls.crt &&
                        cp /src/tls.key /dst/wildcard-socialdevs-tls.key
                    volumeMounts:
                      - name: src
                        mountPath: /src
                      - name: dst
                        mountPath: /dst
                volumes:
                  - name: src
                    secret:
                      secretName: "{{ tls_secret_name }}"
                  - name: dst
                    persistentVolumeClaim:
                      claimName: "{{ pvc_name }}"
        kubeconfig: "{{ kubeconfig_path }}"
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
