# playbooks/3-create-cert-pvc.yml
# ============================================================
# 📦 Crear PVC Longhorn y copiar certificados TLS al volumen
# - PVC: usado por Traefik en /etc/traefik/certs
# - Se copia el Secret TLS (wildcard-socialdevs-tls) al PVC
# - El Job se limpia tras finalizar
# ============================================================

- name: 📦 Crear PVC Longhorn para certificados TLS
  hosts: localhost
  gather_facts: false

  vars_files:
    - ../vars/main.yml

  vars:
    pvc_name: "{{ traefik_pvc_name }}"
    pvc_namespace: "kube-system"
    tls_secret_name: "{{ internal_tls_secret_name }}"
    pvc_size: "{{ traefik_pvc_size }}"
    storage_class: "{{ traefik_pvc_sc }}"
    kubeconfig_path: "/home/victory/.kube/config"
    job_name: "copy-wildcard-cert"

  tasks:

    - name: 📋 Verificar si el PVC ya existe
      kubernetes.core.k8s_info:
        api_version: v1
        kind: PersistentVolumeClaim
        namespace: "{{ pvc_namespace }}"
        name: "{{ pvc_name }}"
        kubeconfig: "{{ kubeconfig_path }}"
      register: pvc_check
      failed_when: false
      changed_when: false

    - name: 📦 Crear PVC si no existe
      when: pvc_check.resources | length == 0
      kubernetes.core.k8s:
        state: present
        kubeconfig: "{{ kubeconfig_path }}"
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: "{{ pvc_name }}"
            namespace: "{{ pvc_namespace }}"
          spec:
            accessModes: ["ReadWriteMany"]
            resources:
              requests:
                storage: "{{ pvc_size }}"
            storageClassName: "{{ storage_class }}"

    - name: 📨 Crear Job temporal para copiar certificados al PVC
      kubernetes.core.k8s:
        state: present
        kubeconfig: "{{ kubeconfig_path }}"
        definition:
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: "{{ job_name }}"
            namespace: "{{ pvc_namespace }}"
          spec:
            ttlSecondsAfterFinished: 120
            template:
              spec:
                restartPolicy: Never
                containers:
                  - name: copier
                    image: alpine:3.19
                    command: ["/bin/sh", "-c"]
                    args:
                      - |
                        cp /src/tls.crt /dst/wildcard-socialdevs-tls.crt && \
                        cp /src/tls.key /dst/wildcard-socialdevs-tls.key
                    volumeMounts:
                      - name: src
                        mountPath: /src
                        readOnly: true
                      - name: dst
                        mountPath: /dst
                volumes:
                  - name: src
                    secret:
                      secretName: "{{ tls_secret_name }}"
                  - name: dst
                    persistentVolumeClaim:
                      claimName: "{{ pvc_name }}"

    - name: ⏳ Esperar a que el Job termine exitosamente
      kubernetes.core.k8s_info:
        api_version: batch/v1
        kind: Job
        name: "{{ job_name }}"
        namespace: "{{ pvc_namespace }}"
        kubeconfig: "{{ kubeconfig_path }}"
      register: job_info
      until: job_info.resources[0].status.succeeded | default(0) | int >= 1
      retries: 20
      delay: 6

    - name: 🧹 Eliminar Job temporal tras su ejecución
      kubernetes.core.k8s:
        state: absent
        kind: Job
        name: "{{ job_name }}"
        namespace: "{{ pvc_namespace }}"
        kubeconfig: "{{ kubeconfig_path }}"
      ignore_errors: true