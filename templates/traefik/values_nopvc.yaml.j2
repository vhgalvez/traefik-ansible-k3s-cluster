# templates/traefik/values_nopvc.yaml.j2
deployment:
  replicas: 2  # ✅ Alta disponibilidad

logs:
  general:
    level: INFO
  access:
    enabled: true

securityContext:
  runAsUser: 1000
  runAsGroup: 1000

entryPoints:
  web:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https

  websecure:
    address: ":443"
    http:
      tls:
        certResolver: default
        certStore: acme-certstore

  metrics:
    address: ":9100"

  traefik:
    address: ":9000"

service:
  enabled: true
  type: NodePort
  externalTrafficPolicy: Cluster
  ports:
    web:
      port: 80
      nodePort: 32591  # ✅ Fijo para HTTP
    websecure:
      port: 443
      nodePort: 31541  # ✅ Fijo para HTTPS
    metrics:
      port: 9100
      nodePort: 31900  # ✅ Fijo para Prometheus

metrics:
  prometheus:
    entryPoint: metrics
    addEntryPointsLabels: true
    addServicesLabels: true
    buckets: "0.1,0.3,1.2,5.0"

tls:
  enabled: true
  stores:
    default:
      defaultCertificate:
        secretName: internal-tls-secret
    acme-certstore:
      defaultCertificate:
        secretName: acme-tls-secret

certificatesResolvers:
  default:
    acme:
      email: {{ letsencrypt_email }}
      storage: /data/acme.json
      httpChallenge:
        entryPoint: web

additionalArguments:
  - "--api.dashboard=true"
  - "--api.insecure=false"
  - "--ping=true"
  - "--entrypoints.web.address=:80"
  - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
  - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
  - "--entrypoints.websecure.address=:443"
  - "--entrypoints.websecure.http.tls=true"
  - "--entrypoints.websecure.http.tls.certresolver=default"
  - "--entrypoints.metrics.address=:9100"
  - "--metrics.prometheus=true"
  - "--metrics.prometheus.entrypoint=metrics"
  - "--metrics.prometheus.addEntryPointsLabels=true"
  - "--metrics.prometheus.addServicesLabels=true"
  - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
  - "--providers.kubernetescrd"
  - "--providers.kubernetescrd.allowEmptyServices=true"
  - "--providers.kubernetesingress"
  - "--providers.kubernetesingress.allowEmptyServices=true"
  - "--providers.kubernetesingress.ingressendpoint.publishedservice=kube-system/{{ service_name }}"