# templates/traefik/values_nopvc.yaml.j2
deployment:
  replicas: 1
  nodeSelector:
    kubernetes.io/hostname: traefik.socialdevs.site

logs:
  general:
    level: INFO
  access:
    enabled: true

securityContext:
  runAsUser: 1000
  runAsGroup: 1000

entryPoints:
  web:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
  websecure:
    address: ":443"  # HTTPS en el puerto 443 para tráfico seguro.
  metrics:
    address: ":9100"
  traefik:
    address: ":9000"  # Exposición del puerto 9000 para el dashboard

service:
  enabled: true
  type: NodePort
  externalTrafficPolicy: Cluster
  ports:
    web:
      port: 80
      nodePort: 32209
    websecure:
      port: 443
      nodePort: 30807
    metrics:
      port: 9100
      nodePort: 31900
    traefik:
      port: 9000
      nodePort: 30900  # Exponer el puerto 9000 para el dashboard

metrics:
  prometheus:
    entryPoint: metrics
    addEntryPointsLabels: true
    addServicesLabels: true
    buckets: "0.1,0.3,1.2,5.0"

tls:
  enabled: true
  stores:
    default:
      defaultCertificate:
        secretName: internal-tls-secret

additionalArguments:
  - "--api.dashboard=true"  # Habilitar el dashboard
  - "--api.insecure=false"  # Deshabilitar acceso inseguro al dashboard
  - "--ping=true"  # Habilitar ping para comprobar el estado
  - "--entrypoints.web.http.redirections.entrypoint.to=websecure"  # Redirigir HTTP a HTTPS
  - "--entrypoints.web.http.redirections.entrypoint.scheme=https"  # Redirigir a HTTPS
  - "--entrypoints.websecure.http.tls=true"  # Habilitar TLS en el entrypoint seguro
  - "--metrics.prometheus=true"  # Habilitar métricas para Prometheus
  - "--metrics.prometheus.entrypoint=metrics"  # Configurar entrypoint de métricas
  - "--metrics.prometheus.addEntryPointsLabels=true"  # Añadir labels a las métricas
  - "--metrics.prometheus.addServicesLabels=true"  # Añadir labels a los servicios
  - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"  # Configuración de buckets para métricas
  - "--providers.kubernetescrd"  # Habilitar el provider CRD
  - "--providers.kubernetescrd.allowEmptyServices=true"  # Permitir servicios vacíos en CRD
  - "--providers.kubernetesingress"  # Habilitar el provider Ingress
  - "--providers.kubernetesingress.allowEmptyServices=true"  # Permitir servicios vacíos en Ingress
  - "--providers.kubernetesingress.ingressendpoint.publishedservice=kube-system/traefik"  # Endpoint del servicio de Ingress