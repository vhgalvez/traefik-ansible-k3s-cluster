# templates/traefik/values_pvc.yaml.j2
#######################################################################
#         Traefik valores Helm para doble sistema de certificados     #
#     ‚Ä¢ Autofirmado (local) por defecto                               #
#     ‚Ä¢ Let's Encrypt (p√∫blico) v√≠a HTTP-01                           #
#######################################################################

############################
# Despliegue y volumen PVC #
############################
deployment:
  enabled: true
  replicas: 1
  podSecurityContext:
    fsGroup: 1000

  # üîí No crear ni importar la IngressClass ‚Äútraefik‚Äù
  ingressClass:
    enabled: false

  additionalVolumes:
    - name: certs
      persistentVolumeClaim:
        claimName: {{ traefik_pvc_name | quote }}

additionalVolumeMounts:
  - name: certs
    mountPath: /etc/traefik/certs
    readOnly: true

############
# Logging  #
############
logs:
  general:
    level: INFO
  access:
    enabled: true

#########################
# Seguridad contenedor  #
#########################
securityContext:
  runAsUser:  1000
  runAsGroup: 1000

###############
# EntryPoints #
###############
entryPoints:
  web:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https

  websecure:
    address: ":443"
    http:
      tls: {}

  metrics:
    address: ":9100"

  traefik:
    address: ":9000"

#########
# Puertos
#########
ports:
  web:
    port: 80
    nodePort: 32591
    expose:
      default: true
    protocol: TCP

  websecure:
    port: 443
    nodePort: 31541
    expose:
      default: true
    protocol: TCP

  metrics:
    port: 9100
    nodePort: 31900
    expose:
      default: true       # ‚Üê objeto requerido por el chart
    protocol: TCP

  traefik:
    port: 9000
    nodePort: 30090        # NodePort para el dashboard interno
    expose:
      default: true        # ‚Üê objeto requerido por el chart
    protocol: TCP

############
# Servicio #
############
service:
  enabled: true
  type: NodePort
  externalTrafficPolicy: Cluster
  ports:
    web:
      port: 80
    websecure:
      port: 443
    traefik:
      port: 9000

################
# Prometheus   #
################
metrics:
  prometheus:
    entryPoint: metrics
    addEntryPointsLabels: true
    addServicesLabels: true
    buckets: "0.1,0.3,0.5,1.0,2.0,5.0"

#########################
# Dashboard / API       #
#########################
ingressRoute:
  dashboard:
    enabled: false   # lo gestionamos con nuestro propio IngressRoute

api:
  dashboard: true

#########################
# TLSStore por defecto  #
#########################
tls:
  stores:
    default:
      defaultCertificate:
        certFile: "/etc/traefik/certs/wildcard-socialdevs-tls.crt"
        keyFile:  "/etc/traefik/certs/wildcard-socialdevs-tls.key"

#####################################################
# ACME: Let's Encrypt (solo se activa externamente) #
#####################################################
certificatesResolvers:
  letsencrypt:
    acme:
      email: {{ letsencrypt_email }}
      storage: /data/acme.json
      httpChallenge:
        entryPoint: web

###########################################
# Argumentos CLI adicionales              #
###########################################
additionalArguments:
  # Core / observabilidad
  - "--api.dashboard=true"
  - "--ping=true"

  # EntryPoints
  - "--entrypoints.web.address=:80"
  - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
  - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
  - "--entrypoints.websecure.address=:443"
  - "--entrypoints.websecure.http.tls=true"
  - "--entrypoints.metrics.address=:9100"
  - "--entrypoints.traefik.address=:9000"

  # Prometheus
  - "--metrics.prometheus=true"
  - "--metrics.prometheus.entrypoint=metrics"
  - "--metrics.prometheus.addEntryPointsLabels=true"
  - "--metrics.prometheus.addServicesLabels=true"

  # Providers Kubernetes
  - "--providers.kubernetescrd"
  - "--providers.kubernetescrd.allowEmptyServices=true"
  - "--providers.kubernetesingress"
  - "--providers.kubernetesingress.allowEmptyServices=true"
  - "--providers.kubernetesingress.ingressendpoint.publishedservice={{ traefik_namespace }}/{{ traefik_release_name }}"

  # ACME (Let's Encrypt)
  - "--certificatesresolvers.letsencrypt.acme.email={{ letsencrypt_email }}"
  - "--certificatesresolvers.letsencrypt.acme.storage=/data/acme.json"
  - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"