# templates\traefik\values_pvc.yaml.j2
#######################################################################
#                Traefik   Valores Helm con certificados en PVC       #
#######################################################################

# ‚ÄºÔ∏è Usa el campo oficial de la chart (`deployment.replicas`)
deployment:
  replicas: 1                  # con RWX evitamos problemas de varios pods
  podSecurityContext:
    fsGroup: 1000              # el uid 1000 puede leer /etc/traefik/certs

# --------------------------------------------------------------------
# üì¶  PVC con los ficheros wildcard-socialdevs-tls.{crt,key}
# --------------------------------------------------------------------
additionalVolumeMounts:
  - name: certs
    mountPath: /etc/traefik/certs
    readOnly: true

additionalVolumes:
  - name: certs
    persistentVolumeClaim:
      claimName: {{ traefik_pvc_name | quote }}

# --------------------------------------------------------------------
# üîä Logs
# --------------------------------------------------------------------
logs:
  general:
    level: INFO
  access:
    enabled: true

# --------------------------------------------------------------------
# üîê Seguridad del contenedor
# --------------------------------------------------------------------
securityContext:
  runAsUser:  1000
  runAsGroup: 1000

# --------------------------------------------------------------------
# üîå EntryPoints
# --------------------------------------------------------------------
entryPoints:
  web:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https

  websecure:
    address: ":443"
    http:
      tls: {}                  # dejamos que la TLSOptions por defecto se aplique

  metrics:
    address: ":9100"

  traefik:
    address: ":9000"

# --------------------------------------------------------------------
# ‚õì Puertos / Service
# --------------------------------------------------------------------
ports:
  web:       { port: 80,   nodePort: 32591, protocol: TCP }
  websecure: { port: 443,  nodePort: 31541, protocol: TCP }
  metrics:   { port: 9100, nodePort: 31900, protocol: TCP }

service:
  type: NodePort
  externalTrafficPolicy: Cluster

# --------------------------------------------------------------------
# üìà Prometheus
# --------------------------------------------------------------------
metrics:
  prometheus:
    entryPoint:             metrics
    addEntryPointsLabels:   true
    addServicesLabels:      true
    buckets: "0.1,0.3,1.2,5.0"

# --------------------------------------------------------------------
# ‚ú® TLS por defecto (certificado autofirmado del PVC)
# --------------------------------------------------------------------
tls:
  enabled: true
  stores:
    default:
      defaultCertificate:
        certFile: /etc/traefik/certs/wildcard-socialdevs-tls.crt
        keyFile:  /etc/traefik/certs/wildcard-socialdevs-tls.key

# --------------------------------------------------------------------
# üîë ACME (opcional, por si luego usas LE)
# --------------------------------------------------------------------
certificatesResolvers:
  default:
    acme:
      email: {{ letsencrypt_email }}
      storage: /data/acme.json
      httpChallenge:
        entryPoint: web

# --------------------------------------------------------------------
# ‚öôÔ∏è Flags Traefik v3
# --------------------------------------------------------------------
additionalArguments:
  - "--api.dashboard=true"
  - "--ping=true"
  - "--entrypoints.web.address=:80"
  - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
  - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
  - "--entrypoints.websecure.address=:443"
  - "--entrypoints.websecure.http.tls=true"
  - "--entrypoints.websecure.http.tls.certresolver=default"
    # (el flag `certstore` desaparece en Traefik v3)
  - "--entrypoints.metrics.address=:9100"
  - "--metrics.prometheus=true"
  - "--metrics.prometheus.entrypoint=metrics"
  - "--metrics.prometheus.addEntryPointsLabels=true"
  - "--metrics.prometheus.addServicesLabels=true"
  - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
  - "--providers.kubernetescrd"
  - "--providers.kubernetescrd.allowEmptyServices=true"
  - "--providers.kubernetesingress"
  - "--providers.kubernetesingress.allowEmptyServices=true"
  - "--providers.kubernetesingress.ingressendpoint.publishedservice={{ traefik_namespace }}/{{ traefik_release_name }}"